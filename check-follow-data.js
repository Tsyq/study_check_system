const mysql = require('mysql2/promise');

async function checkFollowData() {
  console.log('üîç Ê£ÄÊü•Êï∞ÊçÆÂ∫ì‰∏≠ÁöÑÂÖ≥Ê≥®ÂÖ≥Á≥ª...\n');
  
  try {
    // ËøûÊé•Êï∞ÊçÆÂ∫ì
    const connection = await mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '123456',
      database: 'smart_study_checkin'
    });
    
    console.log('‚úÖ Êï∞ÊçÆÂ∫ìËøûÊé•ÊàêÂäü');
    
    // 1. Ê£ÄÊü•Áî®Êà∑Ë°®
    console.log('\n1. Ê£ÄÊü•Áî®Êà∑Ë°®...');
    const [users] = await connection.execute('SELECT id, username FROM users LIMIT 10');
    console.log(`Áî®Êà∑Êï∞Èáè: ${users.length}`);
    users.forEach(user => {
      console.log(`  - ID: ${user.id}, Áî®Êà∑Âêç: ${user.username}`);
    });
    
    // 2. Ê£ÄÊü•ÂÖ≥Ê≥®ÂÖ≥Á≥ªË°®
    console.log('\n2. Ê£ÄÊü•ÂÖ≥Ê≥®ÂÖ≥Á≥ªË°®...');
    const [follows] = await connection.execute('SELECT * FROM user_follows LIMIT 10');
    console.log(`ÂÖ≥Ê≥®ÂÖ≥Á≥ªÊï∞Èáè: ${follows.length}`);
    
    if (follows.length > 0) {
      console.log('ÂÖ≥Ê≥®ÂÖ≥Á≥ªËØ¶ÊÉÖ:');
      for (const follow of follows) {
        const [follower] = await connection.execute('SELECT username FROM users WHERE id = ?', [follow.follower_id]);
        const [following] = await connection.execute('SELECT username FROM users WHERE id = ?', [follow.following_id]);
        console.log(`  - ${follower[0]?.username} ÂÖ≥Ê≥®‰∫Ü ${following[0]?.username}`);
      }
    } else {
      console.log('  - Ê≤°ÊúâÂÖ≥Ê≥®ÂÖ≥Á≥ªÊï∞ÊçÆ');
    }
    
    // 3. Ê£ÄÊü•ÊâìÂç°ËÆ∞ÂΩï
    console.log('\n3. Ê£ÄÊü•ÊâìÂç°ËÆ∞ÂΩï...');
    const [checkins] = await connection.execute('SELECT id, user_id, content, is_public FROM checkins LIMIT 10');
    console.log(`ÊâìÂç°ËÆ∞ÂΩïÊï∞Èáè: ${checkins.length}`);
    
    if (checkins.length > 0) {
      console.log('ÊâìÂç°ËÆ∞ÂΩïËØ¶ÊÉÖ:');
      for (const checkin of checkins) {
        const [user] = await connection.execute('SELECT username FROM users WHERE id = ?', [checkin.user_id]);
        console.log(`  - ${user[0]?.username}: ${checkin.content} (${checkin.is_public ? 'ÂÖ¨ÂºÄ' : 'ÁßÅÂØÜ'})`);
      }
    }
    
    // 4. Ê£ÄÊü•Áî®Êà∑443ÁöÑÂÖ≥Ê≥®ÂÖ≥Á≥ª
    console.log('\n4. Ê£ÄÊü•Áî®Êà∑443ÁöÑÂÖ≥Ê≥®ÂÖ≥Á≥ª...');
    const [user443Follows] = await connection.execute(
      'SELECT uf.*, u.username as following_username FROM user_follows uf JOIN users u ON uf.following_id = u.id WHERE uf.follower_id = 443'
    );
    console.log(`Áî®Êà∑443ÂÖ≥Ê≥®ÁöÑÁî®Êà∑Êï∞Èáè: ${user443Follows.length}`);
    
    if (user443Follows.length > 0) {
      console.log('Áî®Êà∑443ÂÖ≥Ê≥®ÁöÑÁî®Êà∑:');
      user443Follows.forEach(follow => {
        console.log(`  - ÂÖ≥Ê≥®‰∫Ü: ${follow.following_username} (ID: ${follow.following_id})`);
      });
    } else {
      console.log('  - Áî®Êà∑443Ê≤°ÊúâÂÖ≥Ê≥®‰ªª‰ΩïÁî®Êà∑');
    }
    
    // 5. Ê£ÄÊü•Ë¢´ÂÖ≥Ê≥®Áî®Êà∑ÁöÑÂÖ¨ÂºÄÊâìÂç°
    if (user443Follows.length > 0) {
      console.log('\n5. Ê£ÄÊü•Ë¢´ÂÖ≥Ê≥®Áî®Êà∑ÁöÑÂÖ¨ÂºÄÊâìÂç°...');
      const followingIds = user443Follows.map(f => f.following_id);
      const [followingCheckins] = await connection.execute(
        'SELECT c.*, u.username FROM checkins c JOIN users u ON c.user_id = u.id WHERE c.user_id IN (?) AND c.is_public = 1 ORDER BY c.created_at DESC LIMIT 10',
        [followingIds]
      );
      
      console.log(`Ë¢´ÂÖ≥Ê≥®Áî®Êà∑ÁöÑÂÖ¨ÂºÄÊâìÂç°Êï∞Èáè: ${followingCheckins.length}`);
      if (followingCheckins.length > 0) {
        followingCheckins.forEach(checkin => {
          console.log(`  - ${checkin.username}: ${checkin.content}`);
        });
      }
    }
    
    await connection.end();
    
  } catch (error) {
    console.error('‚ùå Ê£ÄÊü•Â§±Ë¥•:', error.message);
  }
}

checkFollowData();
